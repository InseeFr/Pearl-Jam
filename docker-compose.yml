services:
  db:
    image: postgres:15.1
    network_mode: 'host'
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1']
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '${DB_PORT}:5432'
  backend-queen:
    depends_on:
      db:
        condition: service_healthy
    network_mode: 'host'
    image: inseefr/queen-back-office:latest
    container_name: backend-queen
    # environment:
    ports:
      - '${QUEEN_BACKEND_PORT}:6080'
  backend-pearl:
    depends_on:
      db:
        condition: service_healthy
    image: inseefr/pearl-jam-back-office:5.3.1-rc
    network_mode: 'host'
    container_name: backend-pearl
    environment:
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRINGDOC_SWAGGER_UI_OAUTH_ADDITIONALQUERYSTRINGPARAMS_KC_IDP_HINT=${IDP_HINT}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_ROLES_RESPONDENT_ROLE=${RESPONDENT_ROLE}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_ROLES_INTERNAL_USER_ROLE=${INTERNAL_USER_ROLE}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_ROLES_ADMIN_ROLE=${ADMIN_ROLE}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_ROLES_WEBCLIENT_ROLE=${WEBCLIENT_ROLE}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_AUTH_MODE=${AUTH_MODE}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_AUTH_SERVERURL=${AUTH_SERVER_URL}
      - FR_INSEE_DATACOLLECTIONMANAGEMENT_AUTH_REALM=${AUTH_REALM}
      - JWT_ROLE_CLAIM=${JWT_ROLE_CLAIM}
      - SPRINGDOC_SWAGGER_UI_OAUTH_CLIENT_ID=${SWAGGER_CLIENT_ID}
    ports:
      - '${PEARL_BACKEND_PORT}:8080'

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    network_mode: 'host'
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: 'true'
      KEYCLOAK_ADMIN: administrator
      KEYCLOAK_ADMIN_PASSWORD: administrator
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/myrealm.json
      KC_HEALTH_ENABLED: 'true'
      KC_LOG_LEVEL: debug
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:7080/health/ready']
      interval: 15s
      timeout: 2s
      retries: 15
    command: ['start-dev', '--http-port', '7080', '--import-realm']
    ports:
      - '${KEYCLOAK_PORT}:7080'
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
      - ./keycloak/themes:/opt/keycloak/providers
